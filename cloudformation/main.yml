AWSTemplateFormatVersion: "2010-09-09"
Description: Main stack for EC2, Lambda, Roles

Resources:
  # IAMRolesStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./roles.yml

  # LambdaStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: IAMRolesStack
  #   Properties:
  #     TemplateURL: ./lambda-deploy.yml

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                  - iam:PassRole
                  - lambda:*
                  - ec2:*
                Resource: "*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - cloudformation:*
                  - lambda:*
                  - ec2:*
                  - logs:*
                Resource: "*"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: lambda.zip
      Runtime: python3.9
      Timeout: 10

  DeploymentBucket:
    Type: AWS::S3::Bucket

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0861f4e788f5069dd # Amazon Linux 2, change if needed
      InstanceType: t2.micro
      KeyName: trainingkey # Replace with your EC2 key pair name
      SecurityGroups:
        - !Ref EC2SecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl enable httpd
          systemctl start httpd
          echo "<html><h1>Hello from EC2!</h1></html>" > /var/www/html/index.html

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
